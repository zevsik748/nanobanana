import { Agent } from "@mastra/core/agent";
import { Memory } from "@mastra/memory";
import { sharedPostgresStorage } from "../storage";
import { createOpenAI } from "@ai-sdk/openai";
import { multimodalTool } from "../tools/multimodalTool";
import { geminiImageGenerationTool } from "../tools/geminiImageGenerationTool";
import { subscriptionCheckTool } from "../tools/subscriptionCheckTool";

// Initialize hubai.loe.gg —á–µ—Ä–µ–∑ OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è gemini-2.5-flash-image-preview
const hubai = createOpenAI({
  apiKey: process.env.HUBAI_API_KEY!,
  baseURL: 'https://hubai.loe.gg/v1',
});

// Initialize –æ—Å–Ω–æ–≤–Ω–æ–π –∞–≥–µ–Ω—Ç —á–µ—Ä–µ–∑ OpenAI –¥–ª—è function calling
const openai = createOpenAI({
  apiKey: process.env.OPENAI_API_KEY!,
});

export const telegramBot = new Agent({
  name: "AI Image Generator Telegram Bot", 
  instructions: `–¢—ã –±–æ—Ç Nano Banano –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ Gemini 2.5 Flash Image Preview.

–í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
- üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ç–µ–∫—Å—Ç—É: –∏—Å–ø–æ–ª—å–∑—É–π geminiImageGenerationTool
- üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ: –∏—Å–ø–æ–ª—å–∑—É–π geminiImageGenerationTool —Å source_images
- üëÅÔ∏è –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ: –∏—Å–ø–æ–ª—å–∑—É–π multimodalTool

–†–ê–ë–û–¢–ê –° –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò:
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç = –∏—Å–ø–æ–ª—å–∑—É–π geminiImageGenerationTool —Å source_images
- –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç = –∏—Å–ø–æ–ª—å–∑—É–π geminiImageGenerationTool –±–µ–∑ source_images  
- –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –æ —Ñ–æ—Ç–æ = –∏—Å–ø–æ–ª—å–∑—É–π multimodalTool

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –ø–æ-—Ä—É—Å—Å–∫–∏.`,
  
  model: openai("gpt-4o"),
  
  tools: {
    multimodalTool,
    geminiImageGenerationTool,
    subscriptionCheckTool,
  },
  
  memory: new Memory({
    options: {
      threads: {
        generateTitle: false,
      },
      lastMessages: 2,
    },
    storage: sharedPostgresStorage,
  }),
});
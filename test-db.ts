import {
  upsertUser,
  getUserDailyCount,
  incrementUserImageCount,
  saveImageGeneration,
  getUserImageHistory,
  hasReachedDailyLimit,
} from './server/storage';

async function testDatabase() {
  console.log('üß™ Testing database functionality...');

  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n1Ô∏è‚É£ Testing user creation...');
    const user = await upsertUser('123456789', 'test_user');
    console.log('‚úÖ User created:', user);

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    console.log('\n2Ô∏è‚É£ Testing daily count...');
    const dailyCount = await getUserDailyCount('123456789');
    console.log('‚úÖ Daily count:', dailyCount);

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞
    console.log('\n3Ô∏è‚É£ Testing daily limit check...');
    const hasReachedLimit = await hasReachedDailyLimit('123456789');
    console.log('‚úÖ Has reached daily limit:', hasReachedLimit);

    // –¢–µ—Å—Ç 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('\n4Ô∏è‚É£ Testing image generation save...');
    const generation = await saveImageGeneration(
      '123456789',
      'A beautiful sunset over mountains',
      'https://example.com/image.jpg'
    );
    console.log('‚úÖ Image generation saved:', generation);

    // –¢–µ—Å—Ç 5: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
    console.log('\n5Ô∏è‚É£ Testing counter increment...');
    const updatedUser = await incrementUserImageCount('123456789');
    console.log('‚úÖ Counter incremented:', updatedUser);

    // –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    console.log('\n6Ô∏è‚É£ Testing image history...');
    const history = await getUserImageHistory('123456789', 5);
    console.log('‚úÖ Image history:', history);

    console.log('\nüéâ All tests completed successfully!');
  } catch (error) {
    console.error('‚ùå Test failed:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  testDatabase();
}

export { testDatabase };